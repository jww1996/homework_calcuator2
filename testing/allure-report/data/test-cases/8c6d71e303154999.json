{
  "uid" : "8c6d71e303154999",
  "name" : "test_add[failed]",
  "fullName" : "test_calc.TestCalc#test_add",
  "historyId" : "d058d9372cb89153acc136630a7af16e",
  "time" : {
    "start" : 1612436648575,
    "stop" : 1612436648575,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -0.1 == 0.3",
  "statusTrace" : "self = <testing.test_calc.TestCalc object at 0x000002233EB06C70>, get_calc = <python_code.calc.Calculator object at 0x000002233EB11100>, get_datas1 = [0.1, -0.2, 0.3]\n\n    @allure.story(\"测试加法\")\n    # 设定测试用例执行的顺序\n    @pytest.mark.run(order=1)\n    # 加法的测试用例\n    def test_add(self, get_calc, get_datas1):\n    \n        # 调用add方法\n        with allure.step(\"计算两数的相加和\"):\n            result = get_calc.add(get_datas1[0], get_datas1[1])\n        # 可以使用isinstance来判断类型,判断result是浮点数，作保留两位小数的处理\n        if isinstance(result, float):\n            result = round(result, 2)\n    \n        # 得到结果之后需要写断言\n>       assert result == get_datas1[2]\nE       assert -0.1 == 0.3\n\ntest_calc.py:126: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1612436648557,
      "stop" : 1612436648557,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_datas1",
    "time" : {
      "start" : 1612436648574,
      "stop" : 1612436648574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -0.1 == 0.3",
    "statusTrace" : "self = <testing.test_calc.TestCalc object at 0x000002233EB06C70>, get_calc = <python_code.calc.Calculator object at 0x000002233EB11100>, get_datas1 = [0.1, -0.2, 0.3]\n\n    @allure.story(\"测试加法\")\n    # 设定测试用例执行的顺序\n    @pytest.mark.run(order=1)\n    # 加法的测试用例\n    def test_add(self, get_calc, get_datas1):\n    \n        # 调用add方法\n        with allure.step(\"计算两数的相加和\"):\n            result = get_calc.add(get_datas1[0], get_datas1[1])\n        # 可以使用isinstance来判断类型,判断result是浮点数，作保留两位小数的处理\n        if isinstance(result, float):\n            result = round(result, 2)\n    \n        # 得到结果之后需要写断言\n>       assert result == get_datas1[2]\nE       assert -0.1 == 0.3\n\ntest_calc.py:126: AssertionError",
    "steps" : [ {
      "name" : "计算两数的相加和",
      "time" : {
        "start" : 1612436648575,
        "stop" : 1612436648575,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "9d0a5e0b3ab5cc74",
      "name" : "stdout",
      "source" : "9d0a5e0b3ab5cc74.txt",
      "type" : "text/plain",
      "size" : 61
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_datas1::0",
    "time" : {
      "start" : 1612436648644,
      "stop" : 1612436648644,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试计算器"
  }, {
    "name" : "story",
    "value" : "测试加法"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2I60K4O"
  }, {
    "name" : "thread",
    "value" : "14972-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_datas1",
    "value" : "[0.1, -0.2, 0.3]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "8c6d71e303154999.json",
  "parameterValues" : [ "[0.1, -0.2, 0.3]" ]
}